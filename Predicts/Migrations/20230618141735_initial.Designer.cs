// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Predicts.Data;

#nullable disable

namespace Predicts.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230618141735_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("Predicts.Models.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MapName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MatchId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScoreTeam1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScoreTeam2")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("Maps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MapName = "de_inferno",
                            MatchId = 1,
                            ScoreTeam1 = 16,
                            ScoreTeam2 = 13
                        },
                        new
                        {
                            Id = 2,
                            MapName = "de_mirage",
                            MatchId = 1,
                            ScoreTeam1 = 16,
                            ScoreTeam2 = 12
                        });
                });

            modelBuilder.Entity("Predicts.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScoreTeam1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScoreTeam2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TournamentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ScoreTeam1 = 2,
                            ScoreTeam2 = 0,
                            Team1Id = 1,
                            Team2Id = 2,
                            TournamentId = 1
                        });
                });

            modelBuilder.Entity("Predicts.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentTeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 30,
                            CurrentTeamId = 1,
                            Name = "dupreeh"
                        },
                        new
                        {
                            Id = 2,
                            Age = 25,
                            CurrentTeamId = 1,
                            Name = "Magisk"
                        });
                });

            modelBuilder.Entity("Predicts.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "Europe",
                            Name = "Vitality"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Sweden",
                            Name = "Ninjas in Pajamas"
                        });
                });

            modelBuilder.Entity("Predicts.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "The Test Tournament 2023"
                        });
                });

            modelBuilder.Entity("Predicts.Models.Map", b =>
                {
                    b.HasOne("Predicts.Models.Match", "Match")
                        .WithMany("Maps")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");
                });

            modelBuilder.Entity("Predicts.Models.Match", b =>
                {
                    b.HasOne("Predicts.Models.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Predicts.Models.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Predicts.Models.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team1");

                    b.Navigation("Team2");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("Predicts.Models.Player", b =>
                {
                    b.HasOne("Predicts.Models.Team", "CurrentTeam")
                        .WithMany("Players")
                        .HasForeignKey("CurrentTeamId");

                    b.Navigation("CurrentTeam");
                });

            modelBuilder.Entity("Predicts.Models.Match", b =>
                {
                    b.Navigation("Maps");
                });

            modelBuilder.Entity("Predicts.Models.Team", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("Predicts.Models.Tournament", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
